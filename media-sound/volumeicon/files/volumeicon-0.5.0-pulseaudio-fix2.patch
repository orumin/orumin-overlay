diff --git a/src/alsa_backend.c b/src/alsa_backend.c
index 40fce5a..464c127 100644
--- a/src/alsa_backend.c
+++ b/src/alsa_backend.c
@@ -109,13 +109,12 @@ gboolean asound_get_mute()
 	return mute;
 }
 
-void asound_setup(const gchar * card, const gchar * channel,
+int asound_setup(const gchar * card, const gchar * channel,
 	void (*volume_changed)(int,gboolean))
 {
 	// Make sure (for now) that the setup function only gets called once
 	static int asound_setup_called = 0;
 	assert(asound_setup_called == 0);
-	asound_setup_called++;
 
 	// Save card, volume_changed
 	strcpy(m_card, card);
@@ -162,6 +161,9 @@ void asound_setup(const gchar * card, const gchar * channel,
 		asound_set_channel(channel);
 	else if(m_channel_names != NULL)
 		asound_set_channel((const gchar*)m_channel_names->data);
+		
+    // returns if m_elem is not null
+    return (m_elem != NULL);		
 }
 
 void asound_set_channel(const gchar * channel)
diff --git a/src/alsa_backend.h b/src/alsa_backend.h
index 9925bfa..1f3c5f7 100644
--- a/src/alsa_backend.h
+++ b/src/alsa_backend.h
@@ -24,7 +24,7 @@
 #ifndef __ALSA_BACKEND_H__
 #define __ALSA_BACKEND_H__
 
-void asound_setup(const gchar * card, const gchar * channel,
+int asound_setup(const gchar * card, const gchar * channel,
 	void (*volume_changed)(int,gboolean));
 
 void asound_set_channel(const gchar * channel);
diff --git a/src/volumeicon.c b/src/volumeicon.c
index 0fd72f6..c00f5aa 100644
--- a/src/volumeicon.c
+++ b/src/volumeicon.c
@@ -110,7 +110,7 @@ static gboolean m_setting_scale_value = FALSE;
 static PreferencesGui * gui = NULL;
 
 // Backend Interface
-static void (*backend_setup)(const gchar * card, const gchar * channel,
+static int (*backend_setup)(const gchar * card, const gchar * channel,
 	void (*volume_changed)(int,gboolean)) = NULL;
 static void (*backend_set_channel)(const gchar * channel) = NULL;
 static void (*backend_set_volume)(int volume) = NULL;
@@ -969,6 +969,7 @@ int main(int argc, char * argv[])
     bindtextdomain(GETTEXT_PACKAGE, LOCALEDIR);
     bind_textdomain_codeset(GETTEXT_PACKAGE, "UTF-8");
     textdomain(GETTEXT_PACKAGE);
+    int rv = 0;
 
 	// Initialize gtk with arguments
 	GError **errors = 0;
@@ -979,6 +980,7 @@ int main(int argc, char * argv[])
 		{ NULL }
 	};
 	gtk_init_with_args(&argc, &argv, "", options, "", errors);
+
 	signal(SIGCHLD, SIG_IGN);
 
 	// Setup OSD Notification
@@ -1021,8 +1023,18 @@ int main(int argc, char * argv[])
 	#endif
 
 	// Setup
-	config_initialize(config_name);
-	backend_setup(config_get_card(), config_get_channel(), volume_icon_on_volume_changed);
+	do{
+	    config_initialize(config_name);
+	    rv = backend_setup(config_get_card(), config_get_channel(), volume_icon_on_volume_changed);
+
+	    if (!rv){
+	        printf("Couldn't set mixer for the specified card. Retrying in 1s\n");
+	        sleep(1);
+	    }
+	    
+	} while (!rv);
+	
+		
 	m_volume = backend_get_volume();
 	m_mute = backend_get_mute();
 	volume_icon_load_icons();
